{"version":3,"file":"static/js/main.9864d4ec.js","mappings":"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","sources":["common_styles/inputStyles.ts","components/CustomInput/CustomInput.tsx","common_styles/screenStyles.ts","utils/handleContinuePress.tsx","store/slice.ts","utils/handleInputChange.tsx","components/PhoneInput/PhoneInput.tsx","components/CustomButton/CustomButtonStyle.ts","components/CustomButton/CustomButton.tsx","components/NavButtonSection/NavButtonSectionStyle.ts","components/NavButtonSection/NavButtonSection.tsx","components/TitleComponent/TitleComponent.tsx","screens/Registration/Registration.tsx","utils/isEmailValid.ts","common_styles/optionBlockStyles.ts","screens/EmploymentInformation/EmploymentInformation.tsx","screens/CompanyInformation/CompanyInformation.tsx","screens/PersonNameInformation/PersonNameInfortmationStyles.ts","screens/PersonNameInformation/PersonNameInformation.tsx","components/ToggleSwitch/ToggleSwitch.tsx","utils/handleOptionSelect.ts","components/CustomCheckBox/CustomCheckBox.tsx","components/TextComponent/TextComponent.tsx","screens/WorkAreaInformation/WorkAreaInformation.tsx","screens/OutputScreen/OutputScreenStyles.ts","screens/OutputScreen/OutputScreen.tsx","store/store.ts","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { StyleSheet } from 'react-native';\r\n\r\nexport default StyleSheet.create({\r\n    container: {\r\n        width: '60%',\r\n        marginVertical: 10,\r\n    },\r\n    input: {\r\n        borderWidth: 1,\r\n        borderColor: '#8AC43A',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n    },\r\n    underline: {\r\n        height: 2,\r\n        backgroundColor: '#8AC43A',\r\n    },\r\n});","import { View, TextInput } from 'react-native';\r\nimport { CustomInputProps } from './CustomInputProps';\r\nimport InputStyle from '../../common_styles/inputStyles'\r\n\r\nconst CustomInput = ({ placeholder, value = '', onChangeText }: CustomInputProps) => {\r\n\r\n    return (\r\n        <View style={InputStyle.container}>\r\n            <TextInput\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChangeText={onChangeText}\r\n                style={InputStyle.input}\r\n                placeholderTextColor=\"#39241380\"\r\n            />\r\n            <View style={InputStyle.underline} />\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\nexport default CustomInput;\r\n","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    color: '#8AC43A',\n    fontWeight: '700',\n    fontSize: 24\n  },\n  text: {\n    fontFamily: 'Inter',\n    fontSize: 18,\n    color:'#392413'\n  },\n});","import { AppStackParamList } from '../interfaces/AppStackInterfaces';\r\n\r\nexport function handlePress(navigation: any, location: keyof AppStackParamList) {\r\n  navigation.navigate(location);\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst formSlice = createSlice({\r\n  name: 'form',\r\n\r\n  initialState: {\r\n    formData: {}\r\n  },\r\n\r\n  reducers: {\r\n    updateFormData(state, action) {\r\n      state.formData = { ...state.formData, ...action.payload };\r\n    },\r\n    clearForm(state) {\r\n      state.formData = {};\r\n    }\r\n  }\r\n});\r\n\r\nexport const { updateFormData, clearForm } = formSlice.actions;\r\n\r\nexport default formSlice.reducer;","import { FormDataType } from '../interfaces/FormDataType';\r\nimport { updateFormData } from '../store/slice';\r\nimport { Dispatch } from 'redux';\r\n\r\nexport default function handleInputChange(name: string, value: string, formData: FormDataType, dispatch: Dispatch) {\r\n    const updatedFormData = { ...formData, [name]: value };\r\n    return dispatch(updateFormData(updatedFormData));\r\n}","import React, { useState } from 'react';\r\nimport { TextInput, View } from 'react-native';\r\nimport { PhoneInputProps } from './PhoneInputProps';\r\nimport InputStyle from '../../common_styles/inputStyles';\r\n\r\nconst PhoneInput = ({ value = '', onChangeText }: PhoneInputProps) => {\r\n    const [formattedValue, setFormattedValue] = useState<string>(value);\r\n    const [phoneLength, setPhoneLength] = useState<number | undefined>(12);\r\n\r\n    const standartizePhoneNumber = (formattedText: string): string => {\r\n        if (formattedText.length === 12 && formattedText.charAt(0) === '+') {\r\n            return formattedText.slice(2)\r\n        } else if (formattedText.length === 11 && formattedText.charAt(0) === '8') {\r\n            return formattedText.slice(1)\r\n        }\r\n\r\n        return formattedText\r\n    }\r\n\r\n    const handleTextChange = (text: string) => {\r\n        const formattedText = formatPhoneNumber(text.replace(/[^+\\d]/g, ''));\r\n        setFormattedValue(formattedText);\r\n        onChangeText(standartizePhoneNumber(formattedText));\r\n    };\r\n\r\n    const formatPhoneNumber = (input: string): string => {\r\n        let formatted = input;\r\n        if (formatted.charAt(0) === '+' && formatted.charAt(1) === '7') {\r\n            setPhoneLength(12)\r\n        } else if (formatted.charAt(0) === '8') {\r\n            setPhoneLength(11)\r\n        } else {\r\n            formatted = '+7';\r\n        }\r\n        return formatted;\r\n    };\r\n\r\n    return (\r\n        <View style={InputStyle.container}>\r\n            <TextInput\r\n                placeholder={'Номер телефона'}\r\n                value={formattedValue}\r\n                onChangeText={handleTextChange}\r\n                style={InputStyle.input}\r\n                placeholderTextColor=\"#39241380\"\r\n                keyboardType=\"phone-pad\"\r\n                maxLength={phoneLength}\r\n            />\r\n            <View style={InputStyle.underline} />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default PhoneInput;","import { StyleSheet } from 'react-native';\r\n\r\nexport default StyleSheet.create({\r\n    buttonStyle: {\r\n        flex: 1,\r\n        width: '100%'\r\n    },\r\n    titleStyle: {\r\n        fontWeight: '700'\r\n    }\r\n});\r\n","import { Button } from 'react-native-elements';\r\nimport styles from '../../common_styles/screenStyles';\r\nimport { CustomButtonProps } from './CustomButtonProps';\r\nimport buttonStyle from './CustomButtonStyle'\r\n\r\nconst CustomButton = ({ backgroundColor, color, title, onPress }: CustomButtonProps) => {\r\n    return (\r\n        <Button title={title} onPress={onPress} buttonStyle={[buttonStyle.buttonStyle, { backgroundColor: backgroundColor }]} titleStyle={[styles.text, buttonStyle.titleStyle, { color: color }]}\r\n        />\r\n    );\r\n}\r\n\r\nexport default CustomButton","import { StyleSheet } from 'react-native';\r\n\r\nexport default StyleSheet.create({\r\n    buttonContainer: {\r\n        position: 'absolute',\r\n        bottom: '10%',\r\n        width: '100%',\r\n        flex:1,\r\n        justifyContent: 'space-between',\r\n        paddingHorizontal: 20,\r\n        flexWrap: 'wrap'\r\n    }\r\n});\r\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport CustomButton from \"../../components/CustomButton/CustomButton\";\nimport buttonStyles from './NavButtonSectionStyle';\nimport { NavButtonSectionProps } from \"./NavButtonSectionProps\";\n\nconst NavButtonSection: React.FC<NavButtonSectionProps> = ({ navigation, title, onPress }) => {\n\n    return (\n        <View style={buttonStyles.buttonContainer}>\n            <CustomButton backgroundColor='#8AC43A' color='white' title={title} onPress={onPress}></CustomButton>\n            <CustomButton backgroundColor='white' color='#8AC43A' title='НАЗАД' onPress={() => { navigation.goBack() }}></CustomButton>\n        </View>);\n}\n\nexport default NavButtonSection;\n","import { Text } from 'react-native';\r\nimport commonStyles from '../../common_styles/screenStyles'\r\nimport { TitleComponentProps } from './TitleComponentProps';\r\n\r\nconst TitleComponent = ({ children }: TitleComponentProps) => {\r\n    return (\r\n        <Text style={[commonStyles.text, commonStyles.title]}>{children}</Text>\r\n    );\r\n};\r\n\r\nexport default TitleComponent;","import React from \"react\";\nimport { View } from \"react-native\";\nimport CustomInput from \"../../components/CustomInput/CustomInput\";\nimport commonStyles from '../../common_styles/screenStyles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { handlePress } from \"../../utils/handleContinuePress\";\nimport handleInputChange from \"../../utils/handleInputChange\";\nimport isEmailValid from \"../../utils/isEmailValid\";\nimport PhoneInput from '../../components/PhoneInput/PhoneInput';\nimport FormDataProps from \"../../interfaces/FormDataProps\";\nimport { Props } from \"../../interfaces/AppStackInterfaces\";\nimport NavButtonSection from \"../../components/NavButtonSection/NavButtonSection\";\nimport TitleComponent from \"../../components/TitleComponent/TitleComponent\";\n\nconst Registration: React.FC<Props> = ({ navigation }) => {\n    const formData = useSelector((state: FormDataProps) => state.form.formData);\n    const dispatch = useDispatch();\n\n    function fieldsCheck() {\n        if (isEmailValid(formData.email) === false) {\n            alert('Пожалуйста, проверьте корректность почты');\n            return\n        };\n        if (!formData.phone) {\n            alert('Пожалуйста, введите номер телефона');\n            return\n        }\n        if (formData.phone.length !== 10) {\n            alert('Пожалуйста, проверьте корректность телефона');\n            return\n        }\n        handlePress(navigation, 'EmploymentInformation');\n    }\n\n    return (\n        <View style={commonStyles.container}>\n            <TitleComponent>Регистрация</TitleComponent>\n            <CustomInput\n                placeholder=\"Адрес электронной почты\"\n                value={formData.email}\n                onChangeText={(value: string) => handleInputChange('email', value, formData, dispatch)}\n            />\n            <PhoneInput\n                value={formData.phone}\n                onChangeText={(value: string) => handleInputChange('phone', value, formData, dispatch)}\n            />\n            <NavButtonSection navigation={navigation} title='Продолжить' onPress={fieldsCheck} />\n        </View>);\n}\n\nexport default Registration;\n","export default function isEmailValid(email: string): boolean {\r\n    const emailRegex = /\\S+@\\S+\\.\\S+/;\r\n    if (!emailRegex.test(email)) {\r\n        return false\r\n    };\r\n    return true\r\n}","import { StyleSheet } from 'react-native';\r\n\r\nexport default StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'row'\r\n  },\r\n  optionDescription: {\r\n    alignSelf:'center'\r\n  }\r\n});","import React, { useState, useEffect } from 'react';\r\nimport { Text, View } from 'react-native';\r\nimport commonStyles from '../../common_styles/screenStyles';\r\nimport { NavigationProp, useNavigation } from '@react-navigation/native';\r\nimport { RadioButton } from 'react-native-paper';\r\nimport { handlePress } from '../../utils/handleContinuePress';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateFormData } from '../../store/slice';\r\nimport FormDataProps from '../../interfaces/FormDataProps';\r\nimport optionBlockStyles from '../../common_styles/optionBlockStyles';\r\nimport { AppStackNavigationProp, AppStackParamList } from '../../interfaces/AppStackInterfaces';\r\nimport NavButtonSection from '../../components/NavButtonSection/NavButtonSection';\r\nimport TitleComponent from '../../components/TitleComponent/TitleComponent';\r\n\r\nconst EmploymentInformation = () => {\r\n    const [selectedOption, setSelectedOption] = useState<string>('');\r\n    const dispatch = useDispatch();\r\n    const formData = useSelector((state: FormDataProps) => state.form.formData);\r\n    const navigation = useNavigation<NavigationProp<AppStackNavigationProp>>();\r\n    const [nextScreen, setNextScreen] = useState<keyof AppStackParamList | undefined>(undefined);\r\n\r\n    useEffect(() => {\r\n        formData.employmentType === 'private_specialist' && setSelectedOption('option1')\r\n        formData.employmentType === 'company_representative' && setSelectedOption('option2')\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (selectedOption === 'option1') {\r\n            dispatch(updateFormData({ ...formData, employmentType: 'private_specialist' }));\r\n            setNextScreen('PersonNameInformation');\r\n        } else if (selectedOption === 'option2') {\r\n            dispatch(updateFormData({ ...formData, employmentType: 'company_representative' }));\r\n            setNextScreen('CompanyInformation');\r\n        }\r\n    }, [selectedOption]);\r\n\r\n    return (\r\n        <View style={commonStyles.container}>\r\n            <TitleComponent>Как вы работаете?</TitleComponent>\r\n\r\n            <RadioButton.Group\r\n                onValueChange={(value: string) => setSelectedOption(value)}\r\n                value={selectedOption}\r\n            >\r\n                <View style={optionBlockStyles.container}>\r\n                    <RadioButton value='option1' />\r\n                    <Text style={[commonStyles.text, optionBlockStyles.optionDescription]}>На себя, я частный специалист</Text>\r\n                </View>\r\n                <View style={optionBlockStyles.container}>\r\n                    <RadioButton value='option2' />\r\n                    <Text style={[commonStyles.text, optionBlockStyles.optionDescription]}>Я ИП или представитель компании</Text>\r\n                </View>\r\n            </RadioButton.Group>\r\n\r\n            <NavButtonSection navigation={navigation} title='Отправить' onPress={() => (nextScreen ? handlePress(navigation, nextScreen) : alert('Пожалуйста, выберите один из вариантов занятости'))} />\r\n        </View >\r\n    );\r\n}\r\n\r\nexport default EmploymentInformation;","import React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport CustomInput from \"../../components/CustomInput/CustomInput\";\r\nimport commonStyles from '../../common_styles/screenStyles';\r\nimport { handlePress } from \"../../utils/handleContinuePress\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport handleInputChange from \"../../utils/handleInputChange\";\r\nimport FormDataProps from \"../../interfaces/FormDataProps\";\r\nimport { Props } from \"../../interfaces/AppStackInterfaces\";\r\nimport NavButtonSection from \"../../components/NavButtonSection/NavButtonSection\";\r\nimport TitleComponent from \"../../components/TitleComponent/TitleComponent\";\r\n\r\nconst CompanyInformation: React.FC<Props> = ({ navigation }) => {\r\n    const dispatch = useDispatch()\r\n    const formData = useSelector((state: FormDataProps) => state.form.formData);\r\n\r\n    return (\r\n        <View style={commonStyles.container}>\r\n            <TitleComponent>Как называется ваша компания?</TitleComponent>\r\n\r\n            <CustomInput\r\n                placeholder=\"Название компании\"\r\n                value={formData.companyName}\r\n                onChangeText={(value: string) => handleInputChange('companyName', value, formData, dispatch)}\r\n            />\r\n            <CustomInput\r\n                placeholder=\"ФИО ответственного лица\"\r\n                value={formData.officialName}\r\n                onChangeText={(value: string) => handleInputChange('officialName', value, formData, dispatch)}\r\n            />\r\n\r\n            <NavButtonSection navigation={navigation} title='Отправить' onPress={() => { handlePress(navigation, 'WorkAreaInformation') }} />\r\n        </View >);\r\n}\r\n\r\nexport default CompanyInformation;","import { StyleSheet } from 'react-native';\r\n\r\nexport default StyleSheet.create({\r\n    label: {\r\n        fontSize: 12,\r\n        color: '#392413BF',\r\n        width: '70%',\r\n        textAlign: 'center'\r\n    },\r\n});","import React from \"react\";\r\nimport { Text, View } from \"react-native\";\r\nimport CustomInput from \"../../components/CustomInput/CustomInput\";\r\nimport commonStyles from '../../common_styles/screenStyles';\r\nimport { handlePress } from \"../../utils/handleContinuePress\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport handleInputChange from \"../../utils/handleInputChange\";\r\nimport FormDataProps from \"../../interfaces/FormDataProps\";\r\nimport screenStyle from './PersonNameInfortmationStyles'\r\nimport { Props } from \"../../interfaces/AppStackInterfaces\";\r\nimport NavButtonSection from \"../../components/NavButtonSection/NavButtonSection\";\r\nimport TitleComponent from \"../../components/TitleComponent/TitleComponent\";\r\n\r\nconst PersonNameInformation: React.FC<Props> = ({ navigation }) => {\r\n    const formData = useSelector((state: FormDataProps) => state.form.formData);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <View style={commonStyles.container}>\r\n            <TitleComponent>Как вас зовут?</TitleComponent>\r\n\r\n            <Text style={screenStyle.label}>Пожалуйста, укажите  Ваши ФИО как в паспорте, это важно для проверки</Text>\r\n            <CustomInput\r\n                placeholder=\"Фамилия\"\r\n                value={formData.lastName}\r\n                onChangeText={(value: string) => handleInputChange('lastName', value, formData, dispatch)}\r\n            />\r\n            <CustomInput\r\n                placeholder=\"Имя\"\r\n                value={formData.firstName}\r\n                onChangeText={(value: string) => handleInputChange('firstName', value, formData, dispatch)}\r\n            />\r\n            <CustomInput\r\n                placeholder=\"Отчество\"\r\n                value={formData.middleName}\r\n                onChangeText={(value: string) => handleInputChange('middleName', value, formData, dispatch)}\r\n            />\r\n\r\n            <NavButtonSection navigation={navigation} title='Продолжить' onPress={() => handlePress(navigation, 'WorkAreaInformation')} />\r\n        </View >);\r\n}\r\n\r\nexport default PersonNameInformation;","import React, { useState } from 'react';\nimport { Switch } from 'react-native';\nimport { ToggleSwitchProps } from './ToggleSwitchProps';\n\nconst ToggleSwitch = ({ handleOptionSelect, optionKey, optionValue }: ToggleSwitchProps) => {\n  const [isEnabled, setIsEnabled] = useState<boolean>(optionValue);\n  const toggleSwitch = () => {\n    setIsEnabled((previousState: boolean) => !previousState);\n    handleOptionSelect(optionKey, !isEnabled);\n  }\n\n  return (\n    <Switch\n      trackColor={{ false: \"#767577\", true: \"#8AC43A\" }}\n      thumbColor={isEnabled ? \"#f5dd4b\" : \"#f4f3f4\"}\n      ios_backgroundColor=\"#3e3e3e\"\n      onValueChange={toggleSwitch}\n      value={isEnabled}\n    />\n  );\n};\n\nexport default ToggleSwitch;","import { Dispatch } from \"redux\";\r\nimport { updateFormData } from \"../store/slice\";\r\nimport { FormDataType } from \"../interfaces/FormDataType\";\r\n\r\nexport default function handleOptionSelect(value: string, selectedValue: boolean, formData: FormDataType, dispatch: Dispatch) {\r\n    dispatch(updateFormData({ ...formData, [value]: selectedValue }));\r\n}","import React, { useState } from 'react';\r\nimport { CheckBox } from 'react-native-elements';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateFormData } from '../../store/slice';\r\nimport { CustomCheckBoxProps } from './CustomCheckBoxProps';\r\n\r\nconst CustomCheckBox = ({ title, optionKey, optionValue }: CustomCheckBoxProps) => {\r\n  const [isEnabled, setIsEnabled] = useState<boolean>(optionValue);\r\n  const formData = useSelector((state: any) => state.form.formData);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSelect = (value: boolean) => {\r\n    setIsEnabled(value);\r\n    dispatch(updateFormData({ ...formData, [optionKey]: value }));\r\n  };\r\n\r\n  return (\r\n    <CheckBox\r\n      title={title}\r\n      checked={isEnabled}\r\n      onPress={() => handleSelect(!isEnabled)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CustomCheckBox;","import { Text } from 'react-native';\r\nimport commonStyles from '../../common_styles/screenStyles'\r\nimport { TextComponentProps } from './TextComponentProps';\r\n\r\nconst TitleComponent = ({ children }: TextComponentProps) => {\r\n    return (\r\n        <Text style={commonStyles.text}>{children}</Text>\r\n    );\r\n};\r\n\r\nexport default TitleComponent;","import React from \"react\";\r\nimport { View } from \"react-native\";\r\nimport commonStyles from '../../common_styles/screenStyles';\r\nimport ToggleSwitch from \"../../components/ToggleSwitch/ToggleSwitch\";\r\nimport { handlePress } from \"../../utils/handleContinuePress\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport handleOptionSelect from \"../../utils/handleOptionSelect\";\r\nimport CustomCheckBox from \"../../components/CustomCheckBox/CustomCheckBox\";\r\nimport FormDataProps from '../../interfaces/FormDataProps'\r\nimport optionBlockStyles from \"../../common_styles/optionBlockStyles\";\r\nimport { Props } from \"../../interfaces/AppStackInterfaces\";\r\nimport NavButtonSection from \"../../components/NavButtonSection/NavButtonSection\";\r\nimport TitleComponent from \"../../components/TitleComponent/TitleComponent\";\r\nimport TextComponent from \"../../components/TextComponent/TextComponent\";\r\n\r\nconst WorkAreaInformation: React.FC<Props> = ({ navigation }) => {\r\n    const formData = useSelector((state: FormDataProps) => state.form.formData);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <View style={commonStyles.container}>\r\n            <TitleComponent>Где вы оказываете услуги?</TitleComponent>\r\n\r\n            <View style={optionBlockStyles.container}>\r\n                <TextComponent>Работаю удалённо</TextComponent>\r\n                <ToggleSwitch handleOptionSelect={(value: string, selectedValue: boolean) => handleOptionSelect(value, selectedValue, formData, dispatch)} optionKey=\"workTypeRemote\" optionValue={formData.workTypeRemote} />\r\n            </View>\r\n            <View style={optionBlockStyles.container}>\r\n                <TextComponent>Принимаю у себя</TextComponent>\r\n                <ToggleSwitch handleOptionSelect={(value: string, selectedValue: boolean) => handleOptionSelect(value, selectedValue, formData, dispatch)} optionKey=\"workTypeAtHome\" optionValue={formData.workTypeAtHome} />\r\n            </View>\r\n            <View style={optionBlockStyles.container}>\r\n                <TextComponent>Выезжаю к клиентам</TextComponent>\r\n                <ToggleSwitch handleOptionSelect={(value: string, selectedValue: boolean) => handleOptionSelect(value, selectedValue, formData, dispatch)} optionKey=\"workTypeClient\" optionValue={formData.workTypeClient} />\r\n            </View>\r\n            {formData.workTypeClient && (\r\n                <View>\r\n                    <CustomCheckBox\r\n                        title=\"Москва\"\r\n                        optionKey=\"workTypeClient_WorkInMoscow\"\r\n                        optionValue={formData.workTypeClient_WorkInMoscow}\r\n                    />\r\n                    <CustomCheckBox\r\n                        title=\"Московская область\"\r\n                        optionKey=\"workTypeClient_WorkInMoscowRegion\"\r\n                        optionValue={formData.workTypeClient_WorkInMoscowRegion}\r\n                    />\r\n                    <CustomCheckBox\r\n                        title='По согласованию'\r\n                        optionKey=\"workTypeClient_WorkByAgreement\"\r\n                        optionValue={formData.workTypeClient_WorkByAgreement}\r\n                    />\r\n                </View>\r\n            )}\r\n\r\n            <NavButtonSection navigation={navigation} title='Продолжить' onPress={() => handlePress(navigation, 'OutputScreen')} />\r\n        </View>);\r\n}\r\n\r\nexport default WorkAreaInformation;","import { StyleSheet } from 'react-native';\r\n\r\nexport default StyleSheet.create({\r\n    container: {\r\n        marginTop:20,\r\n        flexDirection: 'column',\r\n        alignItems:'center'\r\n    },\r\n});","import React from 'react';\r\nimport { View } from 'react-native';\r\nimport commonStyles from '../../common_styles/screenStyles';\r\nimport { useSelector } from 'react-redux';\r\nimport FormDataProps from '../../interfaces/FormDataProps';\r\nimport OutputScreenStyles from './OutputScreenStyles';\r\nimport { Props } from '../../interfaces/AppStackInterfaces';\r\nimport NavButtonSection from '../../components/NavButtonSection/NavButtonSection';\r\nimport TitleComponent from '../../components/TitleComponent/TitleComponent';\r\nimport TextComponent from '../../components/TextComponent/TextComponent';\r\n\r\nconst PersonNameInformation: React.FC<Props> = ({ navigation }) => {\r\n    const formData = useSelector((state: FormDataProps) => state.form.formData);\r\n\r\n    return (\r\n        <View style={commonStyles.container}>\r\n            <TitleComponent>Введенные данные:</TitleComponent>\r\n\r\n            <TextComponent>Email: {formData.email}</TextComponent>\r\n            <TextComponent>Телефон: +7{formData.phone}</TextComponent>\r\n\r\n            <TextComponent>Тип занятости: {formData.employmentType === 'private_specialist' ? 'Частный специалист' : 'ИП или Представитель Компании'}</TextComponent>\r\n            {formData.employmentType === 'private_specialist' ?\r\n                (<>\r\n                    {formData.firstName && (<TextComponent>Имя: {formData.firstName}</TextComponent>)}\r\n                    {formData.lastName && (<TextComponent>Фамилия: {formData.lastName}</TextComponent>)}\r\n                    {formData.middleName && (<TextComponent>Отчество: {formData.middleName}</TextComponent>)}\r\n                </>)\r\n                :\r\n                (<>\r\n                    {formData.companyName && (<TextComponent>Название компании: {formData.companyName}</TextComponent>)}\r\n                    {formData.officialName && (<TextComponent>Имя ответственного лица: {formData.officialName}</TextComponent>)}\r\n                </>)\r\n            }\r\n\r\n            {(formData.workTypeAtHome || formData.workTypeRemote || formData.workTypeClient) &&\r\n                (<View style={OutputScreenStyles.container}>\r\n                    <TextComponent>Место оказания услуг: </TextComponent>\r\n                    <TextComponent>{formData.workTypeAtHome && 'Дома'}</TextComponent>\r\n                    <TextComponent>{formData.workTypeRemote && 'Удалённо'}</TextComponent>\r\n                    <TextComponent>{formData.workTypeClient && 'У клиента'}</TextComponent>\r\n                    {formData.workTypeClient && (formData.workTypeClient_WorkInMoscow || formData.workTypeClient_WorkByAgreement || formData.workTypeClient_WorkInMoscowRegion) &&\r\n                        (<View style={OutputScreenStyles.container}>\r\n                            <TextComponent>Выезд к клиенту осуществляется:</TextComponent>\r\n                            <TextComponent>{formData.workTypeClient_WorkInMoscow && 'По Москве'}</TextComponent>\r\n                            <TextComponent>{formData.workTypeClient_WorkInMoscowRegion && 'По Московской области'}</TextComponent>\r\n                            <TextComponent>{formData.workTypeClient_WorkByAgreement && 'По согласованию'}</TextComponent>\r\n                        </View>)}\r\n                </View>)}\r\n\r\n            <NavButtonSection navigation={navigation} title='Отправить' onPress={() => console.log(formData)} />\r\n        </View >);\r\n}\r\n\r\nexport default PersonNameInformation;","import { configureStore } from '@reduxjs/toolkit';\r\nimport formReducer from './slice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    form: formReducer\r\n  }\r\n});","import { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Registration from './screens/Registration/Registration';\nimport EmploymentInformation from './screens/EmploymentInformation/EmploymentInformation';\nimport CompanyInformation from './screens/CompanyInformation/CompanyInformation';\nimport PersonNameInformation from './screens/PersonNameInformation/PersonNameInformation';\nimport WorkAreaInformation from './screens/WorkAreaInformation/WorkAreaInformation';\nimport OutputScreen from './screens/OutputScreen/OutputScreen';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nconst Stack = createStackNavigator();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <NavigationContainer>\n        <Stack.Navigator>\n          <Stack.Screen name=\"Registration\" component={Registration} options={{ headerShown: false }} />\n          <Stack.Screen name=\"EmploymentInformation\" component={EmploymentInformation} options={{ headerShown: false }} />\n          <Stack.Screen name=\"CompanyInformation\" component={CompanyInformation} options={{ headerShown: false }} />\n          <Stack.Screen name=\"PersonNameInformation\" component={PersonNameInformation} options={{ headerShown: false }} />\n          <Stack.Screen name=\"WorkAreaInformation\" component={WorkAreaInformation} options={{ headerShown: false }} />\n          <Stack.Screen name=\"OutputScreen\" component={OutputScreen} options={{ headerShown: false }} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </Provider >\n  );\n}\nexport default App","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [663], () => (__webpack_require__(9484)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["StyleSheet","container","width","marginVertical","input","borderWidth","borderColor","borderRadius","padding","underline","height","backgroundColor","_ref","placeholder","_ref$value","value","onChangeText","_jsxs","View","style","InputStyle","children","_jsx","TextInput","placeholderTextColor","flex","flexDirection","alignItems","justifyContent","title","color","fontWeight","fontSize","text","fontFamily","handlePress","navigation","location","navigate","formSlice","createSlice","name","initialState","formData","reducers","updateFormData","state","action","_objectSpread","payload","clearForm","_formSlice$actions","actions","handleInputChange","dispatch","updatedFormData","_defineProperty","_useState","useState","_useState2","_slicedToArray","formattedValue","setFormattedValue","_useState3","_useState4","phoneLength","setPhoneLength","formatPhoneNumber","formatted","charAt","formattedText","replace","length","slice","standartizePhoneNumber","keyboardType","maxLength","buttonStyle","titleStyle","onPress","Button","styles","buttonContainer","position","bottom","paddingHorizontal","flexWrap","buttonStyles","CustomButton","goBack","Text","commonStyles","useSelector","form","useDispatch","TitleComponent","CustomInput","email","PhoneInput","phone","NavButtonSection","test","alert","optionDescription","alignSelf","selectedOption","setSelectedOption","useNavigation","undefined","nextScreen","setNextScreen","useEffect","employmentType","RadioButton","onValueChange","optionBlockStyles","companyName","officialName","label","textAlign","screenStyle","lastName","firstName","middleName","handleOptionSelect","optionKey","optionValue","isEnabled","setIsEnabled","Switch","trackColor","false","true","thumbColor","ios_backgroundColor","previousState","selectedValue","CheckBox","checked","TextComponent","ToggleSwitch","workTypeRemote","workTypeAtHome","workTypeClient","CustomCheckBox","workTypeClient_WorkInMoscow","workTypeClient_WorkInMoscowRegion","workTypeClient_WorkByAgreement","marginTop","_Fragment","OutputScreenStyles","console","log","store","configureStore","reducer","formReducer","Stack","createStackNavigator","Provider","NavigationContainer","Navigator","Screen","component","Registration","options","headerShown","EmploymentInformation","CompanyInformation","PersonNameInformation","WorkAreaInformation","OutputScreen","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","id","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","then","ns","create","def","current","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}